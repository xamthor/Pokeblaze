@page "/pokemonview/{id}"
@using System.Text.Json
@using System.Net.Http.Json
@inject HttpClient HttpClient
@inject NavigationManager navigationManager;

<div class="container mx-auto">
    
    @if (loaded)
    {
        <div class="grid grid-cols-3">
            @if (pokemon.Id - 1 != 0)
            {
                <button @onclick="pre">
                    <img src="@($"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemon.Id - 1}.png")" alt="">
                </button>
            }
            else
            {
                <div></div>
            }
             <p class="self-center text-center capitalize text-white text-2xl">@pokemon.Name</p>
            @if (pokemon.Id + 1 != 152)
            {
                <button @onclick="next" class="justify-self-end">
                                <img src="@($"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemon.Id + 1}.png")" alt="">
                </button>
            }
        </div>
        <img src="@pokemon.Image" class="mx-auto w-64 h-64">
        <div class="mx-auto w-max">
            <p class="text-white text-center mb-4">Types</p>
            @foreach (var type in pokemon.Types)
            {
                <div class="capitalize inline-block text-center text-white mx-2 w-32 h-auto py-4 px-2 @($"bg-{type.Name}")">@type.Name</div>
            }
        </div>
        <div>
            <dl class="mt-12 px-4 md:px-0 grid grid-cols-2 gap-5 sm:grid-cols-6">
                <p class="col-span-full text-white text-center">Stats</p>
                @foreach (var stat in pokemon.Stats)
                {
                    <PokemonStats stat=@stat />
                }
            </dl>
        </div>
    }

</div>

@code {
    [Parameter]
    public string id { get; set; }

    Index.Pokemon pokemon;
    private JsonElement types;
    private JsonElement stats;

    private bool loaded;
    
    protected override async Task OnParametersSetAsync()
    {
        loaded = false;
        string apiEndpoint = $"https://pokeapi.co/api/v2/pokemon/{id}";
        var data = await HttpClient.GetFromJsonAsync<JsonElement>(apiEndpoint);
        pokemon = new Index.Pokemon();
        
        pokemon.Name = data.GetProperty("name").ToString();
        pokemon.Id = Int32.Parse(id);
        pokemon.Image = data.GetProperty("sprites").GetProperty("front_default").ToString();
        types = data.GetProperty("types");
        
        foreach (JsonElement item in types.EnumerateArray())
        {
            Index.Type tempType = new Index.Type();

            tempType.Slot = item.GetProperty("slot").GetInt32();
            tempType.Name = item.GetProperty("type").GetProperty("name").ToString();
            
            pokemon.Types.Add(tempType);

        }
        
        stats = data.GetProperty("stats");

        foreach (JsonElement item in stats.EnumerateArray())
        {
            Index.Stat tempStat = new Index.Stat();
            
            tempStat.Value = item.GetProperty("base_stat").GetInt32();
            tempStat.Name = item.GetProperty("stat").GetProperty("name").ToString();
            
            pokemon.Stats.Add(tempStat);
        }
        
        loaded = true;
    }

    private void pre()
    {
        navigationManager.NavigateTo($"/pokemonview/{pokemon.Id - 1}");
    }
    private void next()
    {
        navigationManager.NavigateTo($"/pokemonview/{pokemon.Id + 1}");
    }
}